projects:
    - name: Block Level Editor
      url: block_editor
      active: true
      technologies:
        - C++
        - OpenGL
      description: An application to create 3D levels out of block pieces. Users can quickly design levels and export them to be used in any game engine.
      features:
        - Automatically merge blocks together on export to increase in-game performance.
        - Draw blocks with custom brushes to speed up level design.
        - Assign colliders to brushes to draw a separate collision layer.
        - Users can create their own blocks in any 3d modelling software.
      images:
        - title: Placing blocks
          full: blockeditor/BlockEditor1.png
          thumb: blockeditor/BlockEditor1_thumb.png
        - title: Extrude tool
          full: blockeditor/BlockEditor2.png
          thumb: blockeditor/BlockEditor2_thumb.png
        - title: Stairs with a simplified ramp collider for better collision detection
          full: blockeditor/BlockEditor3.png
          thumb: blockeditor/BlockEditor3_thumb.png
        - title: Merged block pieces
          full: blockeditor/BlockEditor4.png
          thumb: blockeditor/BlockEditor4_thumb.png
        - title: Textured blocks
          full: blockeditor/BlockEditor5.png
          thumb: blockeditor/BlockEditor5_thumb.png

    - name: Space Shooter
      url: space_shooter
      active: true
      octicon: octicon-rocket
      technologies:
        - C#
        - Unity
      description: Single player 3D space shooter. The player controls a spaceship and must complete various objectives in order to complete each level. The player is equipped with plasma cannons, missles and allies to defeat enemy spaceships.<em>The game uses art assets from the Unity Asset Store.</em>
      features:
        - 3 levels each with different objectives.
        - Friendly and enemy AI ship behaviour using Finite State Machines.
        - Seeker missiles that lock onto and intercept enemy ships.
        - Capital ship turrets that lock onto targets and fire independently of ship movement.
      images:
        - title: Controls presented during the first level
          full: spaceshooter/SpaceShooter1.png
          thumb: spaceshooter/SpaceShooter1_thumb.png
        - title: Firing a missile
          full: spaceshooter/SpaceShooter2.png
          thumb: spaceshooter/SpaceShooter2_thumb.png
        - title: Leading a target
          full: spaceshooter/SpaceShooter3.png
          thumb: spaceshooter/SpaceShooter3_thumb.png
        - title: Damaged enemy ship
          full: spaceshooter/SpaceShooter4.png
          thumb: spaceshooter/SpaceShooter4_thumb.png
        - title: Exploding ship
          full: spaceshooter/SpaceShooter5.png
          thumb: spaceshooter/SpaceShooter5_thumb.png
        - title: Attacking an enemy ship
          full: spaceshooter/SpaceShooter6.png
          thumb: spaceshooter/SpaceShooter6_thumb.png
        - title: AI battle
          full: spaceshooter/SpaceShooter7.png
          thumb: spaceshooter/SpaceShooter7_thumb.png
        - title: Large fleet battle
          full: spaceshooter/SpaceShooter8.png
          thumb: spaceshooter/SpaceShooter8_thumb.png
        - title: Capital ship turret firing
          full: spaceshooter/SpaceShooter9.png
          thumb: spaceshooter/SpaceShooter9_thumb.png
        - title: Torpedoes impacting enemy ship
          full: spaceshooter/SpaceShooter10.png
          thumb: spaceshooter/SpaceShooter10_thumb.png
        - title: Large fleet battle
          full: spaceshooter/SpaceShooter11.png
          thumb: spaceshooter/SpaceShooter11_thumb.png
      videos:
        - video: spaceshooter/space_shooter_vid1.webm
          thumb: spaceshooter/space_shooter_vid1_thumb.png
        - video: spaceshooter/space_shooter_vid2.webm
          thumb: spaceshooter/space_shooter_vid2_thumb.png
        - video: spaceshooter/space_shooter_vid3.webm
          thumb: spaceshooter/space_shooter_vid3_thumb.png

    - name: Zombie Shooter
      url: zombie_shooter
      active: true
      octicon: octicon-organization
      technologies:
        - C#
        - Unity
      description: 3D first person survival game. The player has to collect 5 fuel cans to refuel a boat in order to escape the island. The player can collect weapons, health pickups and food to fend off the wandering zombies. <em>The game uses art assets from the Unity Asset Store.</em>
      features:
        - "3 distinct ranged weapons make up the player's arsenal: a pistol, rifle and shotgun. Ammo is hard to find on the island so these must be used sparingly."
        - An assortment of melee weapons can be found on the island. These can also be thrown at enemies as improvised ranged weapons.
        - Pies, chocolate bars and other snacks may be collected to heal the player in case they get bitten by a zombie.
        - Items and zombie locations are randomized each time the game is played.
      images:
        - title: Main menu
          full: zombieshooter/ZombieShooter1.png
          thumb: zombieshooter/ZombieShooter1_thumb.png
        - title: Fuel cans needed to escape from the island
          full: zombieshooter/ZombieShooter2.png
          thumb: zombieshooter/ZombieShooter2_thumb.png
        - title: Item pickup
          full: zombieshooter/ZombieShooter3.png
          thumb: zombieshooter/ZombieShooter3_thumb.png
        - title: Zombies ragdoll when killed
          full: zombieshooter/ZombieShooter4.png
          thumb: zombieshooter/ZombieShooter4_thumb.png
        - title: Pistol
          full: zombieshooter/ZombieShooter5.png
          thumb: zombieshooter/ZombieShooter5_thumb.png
        - title: Items can be thrown
          full: zombieshooter/ZombieShooter6.png
          thumb: zombieshooter/ZombieShooter6_thumb.png
        - title: Screen shows when the player is hit by a zombie
          full: zombieshooter/ZombieShooter7.png
          thumb: zombieshooter/ZombieShooter7_thumb.png
        - title: The camera zooms out if the player dies showing the surrounding area
          full: zombieshooter/ZombieShooter8.png
          thumb: zombieshooter/ZombieShooter8_thumb.png
        - title: The camera zooms out if the player dies showing the surrounding area
          full: zombieshooter/ZombieShooter9.png
          thumb: zombieshooter/ZombieShooter9_thumb.png
        - title: The player leaving the island after collecting all of the fuel cans
          full: zombieshooter/ZombieShooter10.png
          thumb: zombieshooter/ZombieShooter10_thumb.png
      videos:
        - video: zombieshooter/zombie_shooter_vid1.webm
          thumb: zombieshooter/zombie_shooter_vid1_thumb.png
        - video: zombieshooter/zombie_shooter_vid2.webm
          thumb: zombieshooter/zombie_shooter_vid2_thumb.png
        - video: zombieshooter/zombie_shooter_vid3.webm
          thumb: zombieshooter/zombie_shooter_vid3_thumb.png
        - video: zombieshooter/zombie_shooter_vid4.webm
          thumb: zombieshooter/zombie_shooter_vid4_thumb.png
        - video: zombieshooter/zombie_shooter_vid5.webm
          thumb: zombieshooter/zombie_shooter_vid5_thumb.png

    - name: Level Editor Blender Plugin
      url: level_editor_plugin
      active: true
      octicon: octicon-home
      technologies:
        - Python
        - Blender
      description: Level editor addon for <a href="https://blender.org">Blender</a>.
      features:
        - Place brushes to define rooms and automatically connect them when level is built.
        - Load Unity materials into Blender and assign them to level surfaces.
        - Import Unity prefabs into Blender to place in the level.
        - Automatic stair generation that creates clip brushes for smoother stair collision.
        - Assign triggers and trigger targets for player interaction.
      images:
        - title: Brushes before the level has been built
          full: leveleditor/SectorBuild_1.png
          thumb: leveleditor/SectorBuild_1_thumb.png
        - title: Brushes after the level has been built
          full: leveleditor/SectorBuild_2.png
          thumb: leveleditor/SectorBuild_2_thumb.png
        - title: Assigning materials to surfaces
          full: leveleditor/MaterialPainter.png
          thumb: leveleditor/MaterialPainter_thumb.png
        - title: Builing stairs with multiple sections and the underlying collision geometry
          full: leveleditor/StairBuilder.png
          thumb: leveleditor/StairBuilder_thumb.png
        - title: Placing a prefab door
          full: leveleditor/Prefabs.png
          thumb: leveleditor/Prefabs_thumb.png
        - title: Trigger collider that activates a door animation
          full: leveleditor/Triggers.png
          thumb: leveleditor/Triggers_thumb.png

    - name: Racing Game
      url: racing_game
      active: true
      octicon: octicon-dashboard
      technologies:
        - C#
        - Unity
      description: 3D racing game featuring 3 race tracks, controller support and high score board. <em>The game uses art assets from the Unity Asset Store.</em>
      images:
        - title: Main Menu
          full: racing/racing1.jpg
          thumb: racing/racing1_thumb.jpg
        - title: Track Selection Screen
          full: racing/racing2.jpg
          thumb: racing/racing2_thumb.jpg
        - title:
          full: racing/racing3.jpg
          thumb: racing/racing3_thumb.jpg
        - title:
          full: racing/racing4.jpg
          thumb: racing/racing4_thumb.jpg
        - title: New High Score Menu
          full: racing/racing5.jpg
          thumb: racing/racing5_thumb.jpg
      videos:
        - video: racing/racing_vid1.webm
          thumb: racing/racing_vid1_thumb.png
        - video: racing/racing_vid2.webm
          thumb: racing/racing_vid2_thumb.png

    - name: Shooting Gallery
      url: shooting_gallery
      active: true
      octicon: octicon-milestone
      technologies:
        - C#
        - Unity
      description: 3D first person shooter. Players have to shoot targets when they pop up to score points. The player can choose from 4 different weapons. Weapon accuracy depends on the player's stance, their movement speed and the weapon's recoil. <em>The game uses art assets from the Unity Asset Store.</em>
      images:
        - title: Target range before targets start popping up
          full: shootinggallery/gallery1.png
          thumb: shootinggallery/gallery1_thumb.png
        - title: Moving decreases weapon accuracy
          full: shootinggallery/gallery2.png
          thumb: shootinggallery/gallery2_thumb.png
        - title: Reloading
          full: shootinggallery/gallery3.png
          thumb: shootinggallery/gallery3_thumb.png
        - title: The shotgun fires multiple projectiles in a cone
          full: shootinggallery/gallery4.png
          thumb: shootinggallery/gallery4_thumb.png
        - title: The rifle is able to zoom in
          full: shootinggallery/gallery5.png
          thumb: shootinggallery/gallery5_thumb.png
        - title: Crouching increases accuracy
          full: shootinggallery/gallery6.png
          thumb: shootinggallery/gallery6_thumb.png
      videos:
        - video: shootinggallery/shooting_gallery_vid1.webm
          thumb: shootinggallery/gallery_vid1_thumb.png
        - video: shootinggallery/shooting_gallery_vid2.webm
          thumb: shootinggallery/gallery_vid2_thumb.png
        - video: shootinggallery/shooting_gallery_vid3.webm
          thumb: shootinggallery/gallery_vid3_thumb.png
        - video: shootinggallery/shooting_gallery_vid4.webm
          thumb: shootinggallery/gallery_vid4_thumb.png

    - name: Stencil Creator
      url: stencil_creator
      active: true
      octicon: octicon-pencil
      technologies:
        - C#
        - WPF
      description: Stencil Creator is an application for creating stencil masks quickly. These masks are used for texturing 3d models in a program such as <a href="https://www.allegorithmic.com">Substance Painter</a>.
      images:
        - title: View after opening the program
          full: stencil/StencilCreator1.png
          thumb: stencil/StencilCreator1_thumb.png
        - title: Filtering by font name; Changing the font size and text output
          full: stencil/StencilCreator2.png
          thumb: stencil/StencilCreator2_thumb.png
        - title: Sample output
          full: stencil/StencilCreator3.png
          thumb: stencil/StencilCreator3_thumb.png
        - title: Applying the stencil to a model
          full: stencil/StencilCreator4.png
          thumb: stencil/StencilCreator4_thumb.png
        - title: The finished result.
          full: stencil/StencilCreator5.png
          thumb: stencil/StencilCreator5_thumb.png

    - name: Paintmanager Android App
      url: paintmanager_android
      active: false
      octicon: octicon-device-mobile
      technologies:
        - Java
        - Android
      github: https://github.com/sean-h/paintmanager-androidstudio
      description: Paintmanager is an android app to manage a collection of model paints. The app connects to a custom REST API to sync data between devices.
      images:
        - title: Filtering by Paint Range
          full: paintmanager_android/paintmanager-android-1.png
          thumb: paintmanager_android/paintmanager-android-1-thumb.png 
        - title: Status filtering
          full: paintmanager_android/paintmanager-android-2.png
          thumb: paintmanager_android/paintmanager-android-2-thumb.png 

    - name: Paintmanager REST API
      url: paintmanager_api
      active: false
      octicon: octicon-paintcan
      technologies:
        - Ruby
        - Sinatra
      github: https://github.com/sean-h/paintmanager-api
      description: REST API to handle database interaction for the Paintmanager App and website.

    - name: Paintmanager Website
      url: paintmanager_web
      active: false
      octicon: octicon-browser
      technologies:
        - JavaScript
        - Angular.js
        - Bootstrap
      github: https://github.com/sean-h/paintmanager-api/tree/master/public
      description: Front-end web app for Paintmanager.
      images:
        - title: Paint Status Page
          full: paintmanager_web/paint-site.png
          thumb: paintmanager_web/paint-site-thumb.png
        - title: Filtering paints by name
          full: paintmanager_web/paint-name.png
          thumb: paintmanager_web/paint-name-thumb.png
        - title: Filtering paints by status
          full: paintmanager_web/paint-status.png
          thumb: paintmanager_web/paint-status-thumb.png

    - name: Bookmarket
      url: bookmarket
      active: false
      octicon: octicon-book
      technologies:
        - Ruby
        - Sinatra
      github: https://github.com/cs4431/database
      description: REST API for an online portal to allow university students to buy and sell used textbooks.
